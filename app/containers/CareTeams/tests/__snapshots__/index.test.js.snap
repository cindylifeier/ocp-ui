// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CareTeams /> snapshot tests should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CareTeams
    careTeamStatuses={
      Array [
        Object {
          "code": "active",
          "display": "Active",
        },
        Object {
          "code": "inactive",
          "display": "Inactive",
        },
        Object {
          "code": "suspended",
          "display": "suspended",
        },
      ]
    }
    careTeams={
      Object {
        "data": Object {
          "currentPage": 10,
          "elements": Array [
            Object {
              "id": "1",
              "name": "a",
              "subjectFirstName": "subjectFirstName1",
              "subjectId": "subjectId1",
              "subjectLastName": "subjectLastName1",
            },
            Object {
              "id": "2",
              "name": "b",
              "subjectFirstName": "subjectFirstName2",
              "subjectId": "subjectId2",
              "subjectLastName": "subjectLastName2",
            },
          ],
          "totalNumberOfPages": 100,
        },
        "loading": false,
        "query": Object {
          "a1": "a1",
          "a2": "a2",
        },
        "statusList": Array [
          "active",
          "inactive",
        ],
      }
    }
    getCareTeams={
      [MockFunction] {
        "calls": Array [
          Array [
            1,
          ],
        ],
      }
    }
    initializeCareTeams={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    initializeLookups={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    patient={
      Object {
        "name": Array [
          Object {
            "firstName": "firstName",
            "lastName": "lastName",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <CardHeader
          title={
            <FormattedMessage
              defaultMessage="Care Teams"
              id="ocpui.containers.CareTeams.header"
              values={Object {}}
            />
          }
        />,
        <Grid__Grid
          columns={1}
          gap=""
        >
          <Cell__Cell>
            <InfoSection__InfoSection
              margin="10px 10px"
            >
              <InlineLabel__InlineLabel
                htmlFor="patient_name_1"
              >
                <FormattedMessage
                  defaultMessage="Patient:"
                  id="ocpui.containers.CareTeams.patientLabel"
                  values={Object {}}
                />
                 
              </InlineLabel__InlineLabel>
              <span
                id="patient_name_1"
              >
                firstName lastName
              </span>
            </InfoSection__InfoSection>
          </Cell__Cell>
          <Cell__Cell>
            <FilterSection__FilterSection>
              <CheckboxFilterGrid
                columns="60px repeat(1,120px) 180px 1fr"
              >
                <Cell__Cell>
                  <styled.div>
                    Include
                  </styled.div>
                </Cell__Cell>
                <Cell__Cell>
                  <styled.div>
                    <Checkbox
                      checked={true}
                      disabled={false}
                      label="Inactive"
                      labelPosition="right"
                      name="inactive"
                      onCheck={[Function]}
                    />
                  </styled.div>
                </Cell__Cell>
                <Cell__Cell>
                  <styled.div>
                    <Checkbox
                      checked={false}
                      disabled={false}
                      label="suspended"
                      labelPosition="right"
                      name="suspended"
                      onCheck={[Function]}
                    />
                  </styled.div>
                </Cell__Cell>
              </CheckboxFilterGrid>
            </FilterSection__FilterSection>
          </Cell__Cell>
        </Grid__Grid>,
        false,
        false,
        <styled.div>
          <CareTeamTable
            elements={
              Array [
                Object {
                  "id": "1",
                  "name": "a",
                  "subjectFirstName": "subjectFirstName1",
                  "subjectId": "subjectId1",
                  "subjectLastName": "subjectLastName1",
                },
                Object {
                  "id": "2",
                  "name": "b",
                  "subjectFirstName": "subjectFirstName2",
                  "subjectId": "subjectId2",
                  "subjectLastName": "subjectLastName2",
                },
              ]
            }
          />
          <CenterAlignedUltimatePagination
            boundaryPagesRange={1}
            currentPage={10}
            hideEllipsis={false}
            hideFirstAndLastPageLinks={false}
            hidePreviousAndNextPageLinks={false}
            onChange={[Function]}
            siblingPagesRange={1}
            totalPages={100}
          />
          <RecordsRange
            currentPage={10}
            currentPageSize={undefined}
            totalElements={undefined}
            totalPages={100}
          />
        </styled.div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "title": <FormattedMessage
            defaultMessage="Care Teams"
            id="ocpui.containers.CareTeams.header"
            values={Object {}}
          />,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Cell__Cell>
              <InfoSection__InfoSection
                margin="10px 10px"
              >
                <InlineLabel__InlineLabel
                  htmlFor="patient_name_1"
                >
                  <FormattedMessage
                    defaultMessage="Patient:"
                    id="ocpui.containers.CareTeams.patientLabel"
                    values={Object {}}
                  />
                   
                </InlineLabel__InlineLabel>
                <span
                  id="patient_name_1"
                >
                  firstName lastName
                </span>
              </InfoSection__InfoSection>
            </Cell__Cell>,
            <Cell__Cell>
              <FilterSection__FilterSection>
                <CheckboxFilterGrid
                  columns="60px repeat(1,120px) 180px 1fr"
                >
                  <Cell__Cell>
                    <styled.div>
                      Include
                    </styled.div>
                  </Cell__Cell>
                  <Cell__Cell>
                    <styled.div>
                      <Checkbox
                        checked={true}
                        disabled={false}
                        label="Inactive"
                        labelPosition="right"
                        name="inactive"
                        onCheck={[Function]}
                      />
                    </styled.div>
                  </Cell__Cell>
                  <Cell__Cell>
                    <styled.div>
                      <Checkbox
                        checked={false}
                        disabled={false}
                        label="suspended"
                        labelPosition="right"
                        name="suspended"
                        onCheck={[Function]}
                      />
                    </styled.div>
                  </Cell__Cell>
                </CheckboxFilterGrid>
              </FilterSection__FilterSection>
            </Cell__Cell>,
          ],
          "columns": 1,
          "gap": "",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <InfoSection__InfoSection
                margin="10px 10px"
              >
                <InlineLabel__InlineLabel
                  htmlFor="patient_name_1"
                >
                  <FormattedMessage
                    defaultMessage="Patient:"
                    id="ocpui.containers.CareTeams.patientLabel"
                    values={Object {}}
                  />
                   
                </InlineLabel__InlineLabel>
                <span
                  id="patient_name_1"
                >
                  firstName lastName
                </span>
              </InfoSection__InfoSection>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <InlineLabel__InlineLabel
                    htmlFor="patient_name_1"
                  >
                    <FormattedMessage
                      defaultMessage="Patient:"
                      id="ocpui.containers.CareTeams.patientLabel"
                      values={Object {}}
                    />
                     
                  </InlineLabel__InlineLabel>,
                  <span
                    id="patient_name_1"
                  >
                    firstName lastName
                  </span>,
                ],
                "margin": "10px 10px",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <FormattedMessage
                        defaultMessage="Patient:"
                        id="ocpui.containers.CareTeams.patientLabel"
                        values={Object {}}
                      />,
                      " ",
                    ],
                    "htmlFor": "patient_name_1",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "defaultMessage": "Patient:",
                        "id": "ocpui.containers.CareTeams.patientLabel",
                        "values": Object {},
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " ",
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "firstName lastName",
                    "id": "patient_name_1",
                  },
                  "ref": null,
                  "rendered": "firstName lastName",
                  "type": "span",
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FilterSection__FilterSection>
                <CheckboxFilterGrid
                  columns="60px repeat(1,120px) 180px 1fr"
                >
                  <Cell__Cell>
                    <styled.div>
                      Include
                    </styled.div>
                  </Cell__Cell>
                  <Cell__Cell>
                    <styled.div>
                      <Checkbox
                        checked={true}
                        disabled={false}
                        label="Inactive"
                        labelPosition="right"
                        name="inactive"
                        onCheck={[Function]}
                      />
                    </styled.div>
                  </Cell__Cell>
                  <Cell__Cell>
                    <styled.div>
                      <Checkbox
                        checked={false}
                        disabled={false}
                        label="suspended"
                        labelPosition="right"
                        name="suspended"
                        onCheck={[Function]}
                      />
                    </styled.div>
                  </Cell__Cell>
                </CheckboxFilterGrid>
              </FilterSection__FilterSection>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <CheckboxFilterGrid
                  columns="60px repeat(1,120px) 180px 1fr"
                >
                  <Cell__Cell>
                    <styled.div>
                      Include
                    </styled.div>
                  </Cell__Cell>
                  <Cell__Cell>
                    <styled.div>
                      <Checkbox
                        checked={true}
                        disabled={false}
                        label="Inactive"
                        labelPosition="right"
                        name="inactive"
                        onCheck={[Function]}
                      />
                    </styled.div>
                  </Cell__Cell>
                  <Cell__Cell>
                    <styled.div>
                      <Checkbox
                        checked={false}
                        disabled={false}
                        label="suspended"
                        labelPosition="right"
                        name="suspended"
                        onCheck={[Function]}
                      />
                    </styled.div>
                  </Cell__Cell>
                </CheckboxFilterGrid>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Cell__Cell>
                      <styled.div>
                        Include
                      </styled.div>
                    </Cell__Cell>,
                    Array [
                      <Cell__Cell>
                        <styled.div>
                          <Checkbox
                            checked={true}
                            disabled={false}
                            label="Inactive"
                            labelPosition="right"
                            name="inactive"
                            onCheck={[Function]}
                          />
                        </styled.div>
                      </Cell__Cell>,
                      <Cell__Cell>
                        <styled.div>
                          <Checkbox
                            checked={false}
                            disabled={false}
                            label="suspended"
                            labelPosition="right"
                            name="suspended"
                            onCheck={[Function]}
                          />
                        </styled.div>
                      </Cell__Cell>,
                    ],
                  ],
                  "columns": "60px repeat(1,120px) 180px 1fr",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <styled.div>
                        Include
                      </styled.div>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "Include",
                      },
                      "ref": null,
                      "rendered": "Include",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "inactive",
                    "nodeType": "class",
                    "props": Object {
                      "children": <styled.div>
                        <Checkbox
                          checked={true}
                          disabled={false}
                          label="Inactive"
                          labelPosition="right"
                          name="inactive"
                          onCheck={[Function]}
                        />
                      </styled.div>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Checkbox
                          checked={true}
                          disabled={false}
                          label="Inactive"
                          labelPosition="right"
                          name="inactive"
                          onCheck={[Function]}
                        />,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "checked": true,
                          "disabled": false,
                          "label": "Inactive",
                          "labelPosition": "right",
                          "name": "inactive",
                          "onCheck": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "suspended",
                    "nodeType": "class",
                    "props": Object {
                      "children": <styled.div>
                        <Checkbox
                          checked={false}
                          disabled={false}
                          label="suspended"
                          labelPosition="right"
                          name="suspended"
                          onCheck={[Function]}
                        />
                      </styled.div>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Checkbox
                          checked={false}
                          disabled={false}
                          label="suspended"
                          labelPosition="right"
                          name="suspended"
                          onCheck={[Function]}
                        />,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "checked": false,
                          "disabled": false,
                          "label": "suspended",
                          "labelPosition": "right",
                          "name": "suspended",
                          "onCheck": [Function],
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <CareTeamTable
              elements={
                Array [
                  Object {
                    "id": "1",
                    "name": "a",
                    "subjectFirstName": "subjectFirstName1",
                    "subjectId": "subjectId1",
                    "subjectLastName": "subjectLastName1",
                  },
                  Object {
                    "id": "2",
                    "name": "b",
                    "subjectFirstName": "subjectFirstName2",
                    "subjectId": "subjectId2",
                    "subjectLastName": "subjectLastName2",
                  },
                ]
              }
            />,
            <CenterAlignedUltimatePagination
              boundaryPagesRange={1}
              currentPage={10}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={100}
            />,
            <RecordsRange
              currentPage={10}
              currentPageSize={undefined}
              totalElements={undefined}
              totalPages={100}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "elements": Array [
                Object {
                  "id": "1",
                  "name": "a",
                  "subjectFirstName": "subjectFirstName1",
                  "subjectId": "subjectId1",
                  "subjectLastName": "subjectLastName1",
                },
                Object {
                  "id": "2",
                  "name": "b",
                  "subjectFirstName": "subjectFirstName2",
                  "subjectId": "subjectId2",
                  "subjectLastName": "subjectLastName2",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "boundaryPagesRange": 1,
              "currentPage": 10,
              "hideEllipsis": false,
              "hideFirstAndLastPageLinks": false,
              "hidePreviousAndNextPageLinks": false,
              "onChange": [Function],
              "siblingPagesRange": 1,
              "totalPages": 100,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "currentPage": 10,
              "currentPageSize": undefined,
              "totalElements": undefined,
              "totalPages": 100,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <CardHeader
            title={
              <FormattedMessage
                defaultMessage="Care Teams"
                id="ocpui.containers.CareTeams.header"
                values={Object {}}
              />
            }
          />,
          <Grid__Grid
            columns={1}
            gap=""
          >
            <Cell__Cell>
              <InfoSection__InfoSection
                margin="10px 10px"
              >
                <InlineLabel__InlineLabel
                  htmlFor="patient_name_1"
                >
                  <FormattedMessage
                    defaultMessage="Patient:"
                    id="ocpui.containers.CareTeams.patientLabel"
                    values={Object {}}
                  />
                   
                </InlineLabel__InlineLabel>
                <span
                  id="patient_name_1"
                >
                  firstName lastName
                </span>
              </InfoSection__InfoSection>
            </Cell__Cell>
            <Cell__Cell>
              <FilterSection__FilterSection>
                <CheckboxFilterGrid
                  columns="60px repeat(1,120px) 180px 1fr"
                >
                  <Cell__Cell>
                    <styled.div>
                      Include
                    </styled.div>
                  </Cell__Cell>
                  <Cell__Cell>
                    <styled.div>
                      <Checkbox
                        checked={true}
                        disabled={false}
                        label="Inactive"
                        labelPosition="right"
                        name="inactive"
                        onCheck={[Function]}
                      />
                    </styled.div>
                  </Cell__Cell>
                  <Cell__Cell>
                    <styled.div>
                      <Checkbox
                        checked={false}
                        disabled={false}
                        label="suspended"
                        labelPosition="right"
                        name="suspended"
                        onCheck={[Function]}
                      />
                    </styled.div>
                  </Cell__Cell>
                </CheckboxFilterGrid>
              </FilterSection__FilterSection>
            </Cell__Cell>
          </Grid__Grid>,
          false,
          false,
          <styled.div>
            <CareTeamTable
              elements={
                Array [
                  Object {
                    "id": "1",
                    "name": "a",
                    "subjectFirstName": "subjectFirstName1",
                    "subjectId": "subjectId1",
                    "subjectLastName": "subjectLastName1",
                  },
                  Object {
                    "id": "2",
                    "name": "b",
                    "subjectFirstName": "subjectFirstName2",
                    "subjectId": "subjectId2",
                    "subjectLastName": "subjectLastName2",
                  },
                ]
              }
            />
            <CenterAlignedUltimatePagination
              boundaryPagesRange={1}
              currentPage={10}
              hideEllipsis={false}
              hideFirstAndLastPageLinks={false}
              hidePreviousAndNextPageLinks={false}
              onChange={[Function]}
              siblingPagesRange={1}
              totalPages={100}
            />
            <RecordsRange
              currentPage={10}
              currentPageSize={undefined}
              totalElements={undefined}
              totalPages={100}
            />
          </styled.div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "title": <FormattedMessage
              defaultMessage="Care Teams"
              id="ocpui.containers.CareTeams.header"
              values={Object {}}
            />,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Cell__Cell>
                <InfoSection__InfoSection
                  margin="10px 10px"
                >
                  <InlineLabel__InlineLabel
                    htmlFor="patient_name_1"
                  >
                    <FormattedMessage
                      defaultMessage="Patient:"
                      id="ocpui.containers.CareTeams.patientLabel"
                      values={Object {}}
                    />
                     
                  </InlineLabel__InlineLabel>
                  <span
                    id="patient_name_1"
                  >
                    firstName lastName
                  </span>
                </InfoSection__InfoSection>
              </Cell__Cell>,
              <Cell__Cell>
                <FilterSection__FilterSection>
                  <CheckboxFilterGrid
                    columns="60px repeat(1,120px) 180px 1fr"
                  >
                    <Cell__Cell>
                      <styled.div>
                        Include
                      </styled.div>
                    </Cell__Cell>
                    <Cell__Cell>
                      <styled.div>
                        <Checkbox
                          checked={true}
                          disabled={false}
                          label="Inactive"
                          labelPosition="right"
                          name="inactive"
                          onCheck={[Function]}
                        />
                      </styled.div>
                    </Cell__Cell>
                    <Cell__Cell>
                      <styled.div>
                        <Checkbox
                          checked={false}
                          disabled={false}
                          label="suspended"
                          labelPosition="right"
                          name="suspended"
                          onCheck={[Function]}
                        />
                      </styled.div>
                    </Cell__Cell>
                  </CheckboxFilterGrid>
                </FilterSection__FilterSection>
              </Cell__Cell>,
            ],
            "columns": 1,
            "gap": "",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <InfoSection__InfoSection
                  margin="10px 10px"
                >
                  <InlineLabel__InlineLabel
                    htmlFor="patient_name_1"
                  >
                    <FormattedMessage
                      defaultMessage="Patient:"
                      id="ocpui.containers.CareTeams.patientLabel"
                      values={Object {}}
                    />
                     
                  </InlineLabel__InlineLabel>
                  <span
                    id="patient_name_1"
                  >
                    firstName lastName
                  </span>
                </InfoSection__InfoSection>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <InlineLabel__InlineLabel
                      htmlFor="patient_name_1"
                    >
                      <FormattedMessage
                        defaultMessage="Patient:"
                        id="ocpui.containers.CareTeams.patientLabel"
                        values={Object {}}
                      />
                       
                    </InlineLabel__InlineLabel>,
                    <span
                      id="patient_name_1"
                    >
                      firstName lastName
                    </span>,
                  ],
                  "margin": "10px 10px",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [
                        <FormattedMessage
                          defaultMessage="Patient:"
                          id="ocpui.containers.CareTeams.patientLabel"
                          values={Object {}}
                        />,
                        " ",
                      ],
                      "htmlFor": "patient_name_1",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultMessage": "Patient:",
                          "id": "ocpui.containers.CareTeams.patientLabel",
                          "values": Object {},
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                    ],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "firstName lastName",
                      "id": "patient_name_1",
                    },
                    "ref": null,
                    "rendered": "firstName lastName",
                    "type": "span",
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FilterSection__FilterSection>
                  <CheckboxFilterGrid
                    columns="60px repeat(1,120px) 180px 1fr"
                  >
                    <Cell__Cell>
                      <styled.div>
                        Include
                      </styled.div>
                    </Cell__Cell>
                    <Cell__Cell>
                      <styled.div>
                        <Checkbox
                          checked={true}
                          disabled={false}
                          label="Inactive"
                          labelPosition="right"
                          name="inactive"
                          onCheck={[Function]}
                        />
                      </styled.div>
                    </Cell__Cell>
                    <Cell__Cell>
                      <styled.div>
                        <Checkbox
                          checked={false}
                          disabled={false}
                          label="suspended"
                          labelPosition="right"
                          name="suspended"
                          onCheck={[Function]}
                        />
                      </styled.div>
                    </Cell__Cell>
                  </CheckboxFilterGrid>
                </FilterSection__FilterSection>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <CheckboxFilterGrid
                    columns="60px repeat(1,120px) 180px 1fr"
                  >
                    <Cell__Cell>
                      <styled.div>
                        Include
                      </styled.div>
                    </Cell__Cell>
                    <Cell__Cell>
                      <styled.div>
                        <Checkbox
                          checked={true}
                          disabled={false}
                          label="Inactive"
                          labelPosition="right"
                          name="inactive"
                          onCheck={[Function]}
                        />
                      </styled.div>
                    </Cell__Cell>
                    <Cell__Cell>
                      <styled.div>
                        <Checkbox
                          checked={false}
                          disabled={false}
                          label="suspended"
                          labelPosition="right"
                          name="suspended"
                          onCheck={[Function]}
                        />
                      </styled.div>
                    </Cell__Cell>
                  </CheckboxFilterGrid>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Cell__Cell>
                        <styled.div>
                          Include
                        </styled.div>
                      </Cell__Cell>,
                      Array [
                        <Cell__Cell>
                          <styled.div>
                            <Checkbox
                              checked={true}
                              disabled={false}
                              label="Inactive"
                              labelPosition="right"
                              name="inactive"
                              onCheck={[Function]}
                            />
                          </styled.div>
                        </Cell__Cell>,
                        <Cell__Cell>
                          <styled.div>
                            <Checkbox
                              checked={false}
                              disabled={false}
                              label="suspended"
                              labelPosition="right"
                              name="suspended"
                              onCheck={[Function]}
                            />
                          </styled.div>
                        </Cell__Cell>,
                      ],
                    ],
                    "columns": "60px repeat(1,120px) 180px 1fr",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <styled.div>
                          Include
                        </styled.div>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "Include",
                        },
                        "ref": null,
                        "rendered": "Include",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "inactive",
                      "nodeType": "class",
                      "props": Object {
                        "children": <styled.div>
                          <Checkbox
                            checked={true}
                            disabled={false}
                            label="Inactive"
                            labelPosition="right"
                            name="inactive"
                            onCheck={[Function]}
                          />
                        </styled.div>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Checkbox
                            checked={true}
                            disabled={false}
                            label="Inactive"
                            labelPosition="right"
                            name="inactive"
                            onCheck={[Function]}
                          />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "checked": true,
                            "disabled": false,
                            "label": "Inactive",
                            "labelPosition": "right",
                            "name": "inactive",
                            "onCheck": [Function],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "suspended",
                      "nodeType": "class",
                      "props": Object {
                        "children": <styled.div>
                          <Checkbox
                            checked={false}
                            disabled={false}
                            label="suspended"
                            labelPosition="right"
                            name="suspended"
                            onCheck={[Function]}
                          />
                        </styled.div>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <Checkbox
                            checked={false}
                            disabled={false}
                            label="suspended"
                            labelPosition="right"
                            name="suspended"
                            onCheck={[Function]}
                          />,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "checked": false,
                            "disabled": false,
                            "label": "suspended",
                            "labelPosition": "right",
                            "name": "suspended",
                            "onCheck": [Function],
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <CareTeamTable
                elements={
                  Array [
                    Object {
                      "id": "1",
                      "name": "a",
                      "subjectFirstName": "subjectFirstName1",
                      "subjectId": "subjectId1",
                      "subjectLastName": "subjectLastName1",
                    },
                    Object {
                      "id": "2",
                      "name": "b",
                      "subjectFirstName": "subjectFirstName2",
                      "subjectId": "subjectId2",
                      "subjectLastName": "subjectLastName2",
                    },
                  ]
                }
              />,
              <CenterAlignedUltimatePagination
                boundaryPagesRange={1}
                currentPage={10}
                hideEllipsis={false}
                hideFirstAndLastPageLinks={false}
                hidePreviousAndNextPageLinks={false}
                onChange={[Function]}
                siblingPagesRange={1}
                totalPages={100}
              />,
              <RecordsRange
                currentPage={10}
                currentPageSize={undefined}
                totalElements={undefined}
                totalPages={100}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "elements": Array [
                  Object {
                    "id": "1",
                    "name": "a",
                    "subjectFirstName": "subjectFirstName1",
                    "subjectId": "subjectId1",
                    "subjectLastName": "subjectLastName1",
                  },
                  Object {
                    "id": "2",
                    "name": "b",
                    "subjectFirstName": "subjectFirstName2",
                    "subjectId": "subjectId2",
                    "subjectLastName": "subjectLastName2",
                  },
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "boundaryPagesRange": 1,
                "currentPage": 10,
                "hideEllipsis": false,
                "hideFirstAndLastPageLinks": false,
                "hidePreviousAndNextPageLinks": false,
                "onChange": [Function],
                "siblingPagesRange": 1,
                "totalPages": 100,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "currentPage": 10,
                "currentPageSize": undefined,
                "totalElements": undefined,
                "totalPages": 100,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
