.title {
  padding-left: 0.5vw;
  margin-top: 2vh;
  margin-left: 1vw;
  margin-right: 1vw;
  font-size: 1.2rem;
  font-weight: bold;
  color: #444;
  background-color: #f2f2f2;
}

.gridItem {
  border-radius: 5px;
  font-size: 100%;
}

.patientName {
  grid-area: patientName;
}

.firstName {
  grid-area: firstName;
}

.lastName {
  grid-area: lastName;
}

.birthDate {
  grid-area: birthDate;
}

.genderCode {
  grid-area: genderCode;
}

.identifierGroup {
  grid-area: identifierGroup;
}

.startDate {
  grid-area: startDate;
}

.endDate {
  grid-area: endDate;
}

.birthSex {
  grid-area: birthSex;
}

.address1 {
  grid-area: address1;
}

.address2 {
  grid-area: address2;
}

.city {
  grid-area: city;
}

.state {
  grid-area: state;
}

.postalCode {
  grid-area: postalCode;
}

.relationshipType {
  grid-area: relationshipType;
}

.country {
  grid-area: country;
}

.contactGroup {
  grid-area: contactGroup;
}

.buttonGroup {
  grid-area: buttonGroup;
  margin: 1vh 0;
  display: grid;
  grid-column-gap: 1vw;
  grid-template-columns: 1fr 1fr 2fr;
}

.gridContainer {
  color: #444;
  width: auto;
  padding-left: 0.5vw;
  margin: 0 1vw;
  display: grid;
  grid-column-gap: 2vw;
  grid-row-gap: 2vh;
  grid-template-columns: 1fr;
  grid-template-areas:
    "patientName"
    "active"
    "firstName"
    "lastName"
    "birthDate"
    "genderCode"
    "birthSex"
    "startDate"
    "endDate"
    "relationshipType"
    "identifierGroup"
    "contactGroup"
    "address1"
    "address2"
    "city"
    "state"
    "postalCode"
    "country"
    "buttonGroup";
}
/* Tablet landscape ----------- */
@media only screen and (min-width: 768px) {
  .gridContainer {
    grid-template-columns: 1fr 1fr;
    grid-template-areas:
      "patientName ."
      "active ."
      "firstName lastName"
      "birthDate genderCode"
      "startDate endDate"
      "relationshipType ."
      "identifierGroup identifierGroup"
      "contactGroup contactGroup"
      "address1 ."
      "address2 ."
      "city state"
      "postalCode country"
      "buttonGroup .";
  }

  .identifierGroup {
    display: grid;
    grid-template-columns: 1fr 2fr;
  }

  .contactGroup {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr;
  }

  .buttonGroup {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
  }

}

/* Desktops and laptops ----------- */
@media only screen and (min-width: 1200px) {
  .gridContainer {
    grid-template-columns: repeat(12, 1fr);
  }

  .patientName {
    grid-column: 1 / span 4;
    grid-row: 1;
  }
  .active {
    grid-column: 1 / span 1;
    grid-row: 2;
  }

  .firstName {
    grid-column: 1 / span 2;
    grid-row: 3;
  }

  .lastName {
    grid-column: 3 / span 2;
    grid-row: 3;
  }

  .relationshipType {
    grid-column: 1 / span 2;
    grid-row: 4;
    grid-template-columns: 1fr 1fr;
  }

  .birthDate {
    grid-column: 3 / span 2 ;
    grid-row: 4;
  }

  .genderCode {
    grid-column: 5;
    grid-row: 4;
  }

  .startDate {
    grid-column: 1 / span 2;
    grid-row: 5;
  }

  .endDate {
    grid-column: 3 / span 2;
    grid-row: 5;
  }

  .identifierGroup {
    grid-column: 1 / span 5;
    grid-row: 6;
    grid-template-columns: 2fr 3fr;
  }

  .address1 {
    grid-column: 1 / span 3;
    grid-row: 7;
  }

  .address2 {
    grid-column: 4 / span 3;
    grid-row: 7;
  }

  .city {
    grid-column: 1 / span 2;
    grid-row: 8;
  }

  .state {
    grid-column: 3 / span 2;
    grid-row: 8;
  }

  .postalCode {
    grid-column: 5 / span 2;
    grid-row: 8;
  }

  .country {
    grid-column: 1 / span 2;
    grid-row: 9;
  }

  .contactGroup {
    grid-column: 1 / span 7;
    grid-row: 10;
    grid-template-columns: 1fr 2fr 1fr;
  }

  .buttonGroup {
    grid-column: 1 / span 2;
    grid-row: 11;
    grid-template-columns: 1fr 1fr;
  }

}
