// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Login /> should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    onLogin={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Grid__Grid
        areas={
          Array [
            "header header header",
            "leftSide content rightSide",
            "footer footer footer",
          ]
        }
        columns={3}
        rows="120px 1fr 120px"
      >
        <Cell__Cell
          area="header"
        >
          <StyledImage__StyledImage
            alt={
              <FormattedMessage
                defaultMessage="OCP brand image"
                id="ocpui.components.Login.brandImg"
                values={Object {}}
              />
            }
            borderWidth="0px"
            height="56px"
            margin="10px"
            src="IMAGE_MOCK"
            width="85px"
          />
          <Styled(Divider) />
        </Cell__Cell>
        <Cell__Cell
          area="leftSide"
        />
        <Cell__Cell
          area="rightSide"
        />
        <Cell__Cell
          area="content"
          center={true}
        >
          <Styled(Card)>
            <CardHeader
              title={
                <FormattedMessage
                  defaultMessage="Login to your account"
                  id="ocpui.components.Login.title"
                  values={Object {}}
                />
              }
            />
            <Formik
              enableReinitialize={false}
              isInitialValid={false}
              onSubmit={[Function]}
              render={[Function]}
              validateOnBlur={true}
              validateOnChange={true}
              validationSchema={
                ObjectSchema {
                  "_blacklist": Array [],
                  "_conditions": Array [],
                  "_defaultDefault": [Function],
                  "_deps": Array [],
                  "_excludedEdges": Array [],
                  "_exclusive": Object {},
                  "_mutate": false,
                  "_nodes": Array [
                    "password",
                    "username",
                  ],
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "object",
                  "_typeError": [Function],
                  "_whitelist": Array [],
                  "fields": Object {
                    "password": StringSchema {
                      "_blacklist": Array [],
                      "_conditions": Array [],
                      "_deps": Array [],
                      "_exclusive": Object {
                        "required": false,
                      },
                      "_mutate": false,
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "string",
                      "_typeError": [Function],
                      "_whitelist": Array [],
                      "tests": Array [
                        [Function],
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                    "username": StringSchema {
                      "_blacklist": Array [],
                      "_conditions": Array [],
                      "_deps": Array [],
                      "_exclusive": Object {
                        "required": false,
                      },
                      "_mutate": false,
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "string",
                      "_typeError": [Function],
                      "_whitelist": Array [],
                      "tests": Array [
                        [Function],
                        [Function],
                      ],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                  },
                  "tests": Array [],
                  "transforms": Array [
                    [Function],
                  ],
                }
              }
            />
          </Styled(Card)>
        </Cell__Cell>
        <Cell__Cell
          area="footer"
        />
      </Grid__Grid>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "areas": Array [
          "header header header",
          "leftSide content rightSide",
          "footer footer footer",
        ],
        "children": Array [
          <Cell__Cell
            area="header"
          >
            <StyledImage__StyledImage
              alt={
                <FormattedMessage
                  defaultMessage="OCP brand image"
                  id="ocpui.components.Login.brandImg"
                  values={Object {}}
                />
              }
              borderWidth="0px"
              height="56px"
              margin="10px"
              src="IMAGE_MOCK"
              width="85px"
            />
            <Styled(Divider) />
          </Cell__Cell>,
          <Cell__Cell
            area="leftSide"
          />,
          <Cell__Cell
            area="rightSide"
          />,
          <Cell__Cell
            area="content"
            center={true}
          >
            <Styled(Card)>
              <CardHeader
                title={
                  <FormattedMessage
                    defaultMessage="Login to your account"
                    id="ocpui.components.Login.title"
                    values={Object {}}
                  />
                }
              />
              <Formik
                enableReinitialize={false}
                isInitialValid={false}
                onSubmit={[Function]}
                render={[Function]}
                validateOnBlur={true}
                validateOnChange={true}
                validationSchema={
                  ObjectSchema {
                    "_blacklist": Array [],
                    "_conditions": Array [],
                    "_defaultDefault": [Function],
                    "_deps": Array [],
                    "_excludedEdges": Array [],
                    "_exclusive": Object {},
                    "_mutate": false,
                    "_nodes": Array [
                      "password",
                      "username",
                    ],
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "object",
                    "_typeError": [Function],
                    "_whitelist": Array [],
                    "fields": Object {
                      "password": StringSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "username": StringSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                    },
                    "tests": Array [],
                    "transforms": Array [
                      [Function],
                    ],
                  }
                }
              />
            </Styled(Card)>
          </Cell__Cell>,
          <Cell__Cell
            area="footer"
          />,
        ],
        "columns": 3,
        "rows": "120px 1fr 120px",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "area": "header",
            "children": Array [
              <StyledImage__StyledImage
                alt={
                  <FormattedMessage
                    defaultMessage="OCP brand image"
                    id="ocpui.components.Login.brandImg"
                    values={Object {}}
                  />
                }
                borderWidth="0px"
                height="56px"
                margin="10px"
                src="IMAGE_MOCK"
                width="85px"
              />,
              <Styled(Divider) />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "alt": <FormattedMessage
                  defaultMessage="OCP brand image"
                  id="ocpui.components.Login.brandImg"
                  values={Object {}}
                />,
                "borderWidth": "0px",
                "height": "56px",
                "margin": "10px",
                "src": "IMAGE_MOCK",
                "width": "85px",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "area": "leftSide",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "area": "rightSide",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "area": "content",
            "center": true,
            "children": <Styled(Card)>
              <CardHeader
                title={
                  <FormattedMessage
                    defaultMessage="Login to your account"
                    id="ocpui.components.Login.title"
                    values={Object {}}
                  />
                }
              />
              <Formik
                enableReinitialize={false}
                isInitialValid={false}
                onSubmit={[Function]}
                render={[Function]}
                validateOnBlur={true}
                validateOnChange={true}
                validationSchema={
                  ObjectSchema {
                    "_blacklist": Array [],
                    "_conditions": Array [],
                    "_defaultDefault": [Function],
                    "_deps": Array [],
                    "_excludedEdges": Array [],
                    "_exclusive": Object {},
                    "_mutate": false,
                    "_nodes": Array [
                      "password",
                      "username",
                    ],
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "object",
                    "_typeError": [Function],
                    "_whitelist": Array [],
                    "fields": Object {
                      "password": StringSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "username": StringSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                    },
                    "tests": Array [],
                    "transforms": Array [
                      [Function],
                    ],
                  }
                }
              />
            </Styled(Card)>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <CardHeader
                  title={
                    <FormattedMessage
                      defaultMessage="Login to your account"
                      id="ocpui.components.Login.title"
                      values={Object {}}
                    />
                  }
                />,
                <Formik
                  enableReinitialize={false}
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                  validationSchema={
                    ObjectSchema {
                      "_blacklist": Array [],
                      "_conditions": Array [],
                      "_defaultDefault": [Function],
                      "_deps": Array [],
                      "_excludedEdges": Array [],
                      "_exclusive": Object {},
                      "_mutate": false,
                      "_nodes": Array [
                        "password",
                        "username",
                      ],
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "object",
                      "_typeError": [Function],
                      "_whitelist": Array [],
                      "fields": Object {
                        "password": StringSchema {
                          "_blacklist": Array [],
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": Array [],
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "username": StringSchema {
                          "_blacklist": Array [],
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": Array [],
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                      },
                      "tests": Array [],
                      "transforms": Array [
                        [Function],
                      ],
                    }
                  }
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "title": <FormattedMessage
                    defaultMessage="Login to your account"
                    id="ocpui.components.Login.title"
                    values={Object {}}
                  />,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "enableReinitialize": false,
                  "isInitialValid": false,
                  "onSubmit": [Function],
                  "render": [Function],
                  "validateOnBlur": true,
                  "validateOnChange": true,
                  "validationSchema": ObjectSchema {
                    "_blacklist": Array [],
                    "_conditions": Array [],
                    "_defaultDefault": [Function],
                    "_deps": Array [],
                    "_excludedEdges": Array [],
                    "_exclusive": Object {},
                    "_mutate": false,
                    "_nodes": Array [
                      "password",
                      "username",
                    ],
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "object",
                    "_typeError": [Function],
                    "_whitelist": Array [],
                    "fields": Object {
                      "password": StringSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "username": StringSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                    },
                    "tests": Array [],
                    "transforms": Array [
                      [Function],
                    ],
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "area": "footer",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Grid__Grid
          areas={
            Array [
              "header header header",
              "leftSide content rightSide",
              "footer footer footer",
            ]
          }
          columns={3}
          rows="120px 1fr 120px"
        >
          <Cell__Cell
            area="header"
          >
            <StyledImage__StyledImage
              alt={
                <FormattedMessage
                  defaultMessage="OCP brand image"
                  id="ocpui.components.Login.brandImg"
                  values={Object {}}
                />
              }
              borderWidth="0px"
              height="56px"
              margin="10px"
              src="IMAGE_MOCK"
              width="85px"
            />
            <Styled(Divider) />
          </Cell__Cell>
          <Cell__Cell
            area="leftSide"
          />
          <Cell__Cell
            area="rightSide"
          />
          <Cell__Cell
            area="content"
            center={true}
          >
            <Styled(Card)>
              <CardHeader
                title={
                  <FormattedMessage
                    defaultMessage="Login to your account"
                    id="ocpui.components.Login.title"
                    values={Object {}}
                  />
                }
              />
              <Formik
                enableReinitialize={false}
                isInitialValid={false}
                onSubmit={[Function]}
                render={[Function]}
                validateOnBlur={true}
                validateOnChange={true}
                validationSchema={
                  ObjectSchema {
                    "_blacklist": Array [],
                    "_conditions": Array [],
                    "_defaultDefault": [Function],
                    "_deps": Array [],
                    "_excludedEdges": Array [],
                    "_exclusive": Object {},
                    "_mutate": false,
                    "_nodes": Array [
                      "password",
                      "username",
                    ],
                    "_options": Object {
                      "abortEarly": true,
                      "recursive": true,
                    },
                    "_type": "object",
                    "_typeError": [Function],
                    "_whitelist": Array [],
                    "fields": Object {
                      "password": StringSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                      "username": StringSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_deps": Array [],
                        "_exclusive": Object {
                          "required": false,
                        },
                        "_mutate": false,
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "string",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "tests": Array [
                          [Function],
                          [Function],
                        ],
                        "transforms": Array [
                          [Function],
                        ],
                      },
                    },
                    "tests": Array [],
                    "transforms": Array [
                      [Function],
                    ],
                  }
                }
              />
            </Styled(Card)>
          </Cell__Cell>
          <Cell__Cell
            area="footer"
          />
        </Grid__Grid>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "areas": Array [
            "header header header",
            "leftSide content rightSide",
            "footer footer footer",
          ],
          "children": Array [
            <Cell__Cell
              area="header"
            >
              <StyledImage__StyledImage
                alt={
                  <FormattedMessage
                    defaultMessage="OCP brand image"
                    id="ocpui.components.Login.brandImg"
                    values={Object {}}
                  />
                }
                borderWidth="0px"
                height="56px"
                margin="10px"
                src="IMAGE_MOCK"
                width="85px"
              />
              <Styled(Divider) />
            </Cell__Cell>,
            <Cell__Cell
              area="leftSide"
            />,
            <Cell__Cell
              area="rightSide"
            />,
            <Cell__Cell
              area="content"
              center={true}
            >
              <Styled(Card)>
                <CardHeader
                  title={
                    <FormattedMessage
                      defaultMessage="Login to your account"
                      id="ocpui.components.Login.title"
                      values={Object {}}
                    />
                  }
                />
                <Formik
                  enableReinitialize={false}
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                  validationSchema={
                    ObjectSchema {
                      "_blacklist": Array [],
                      "_conditions": Array [],
                      "_defaultDefault": [Function],
                      "_deps": Array [],
                      "_excludedEdges": Array [],
                      "_exclusive": Object {},
                      "_mutate": false,
                      "_nodes": Array [
                        "password",
                        "username",
                      ],
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "object",
                      "_typeError": [Function],
                      "_whitelist": Array [],
                      "fields": Object {
                        "password": StringSchema {
                          "_blacklist": Array [],
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": Array [],
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "username": StringSchema {
                          "_blacklist": Array [],
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": Array [],
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                      },
                      "tests": Array [],
                      "transforms": Array [
                        [Function],
                      ],
                    }
                  }
                />
              </Styled(Card)>
            </Cell__Cell>,
            <Cell__Cell
              area="footer"
            />,
          ],
          "columns": 3,
          "rows": "120px 1fr 120px",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "area": "header",
              "children": Array [
                <StyledImage__StyledImage
                  alt={
                    <FormattedMessage
                      defaultMessage="OCP brand image"
                      id="ocpui.components.Login.brandImg"
                      values={Object {}}
                    />
                  }
                  borderWidth="0px"
                  height="56px"
                  margin="10px"
                  src="IMAGE_MOCK"
                  width="85px"
                />,
                <Styled(Divider) />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "alt": <FormattedMessage
                    defaultMessage="OCP brand image"
                    id="ocpui.components.Login.brandImg"
                    values={Object {}}
                  />,
                  "borderWidth": "0px",
                  "height": "56px",
                  "margin": "10px",
                  "src": "IMAGE_MOCK",
                  "width": "85px",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "area": "leftSide",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "area": "rightSide",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "area": "content",
              "center": true,
              "children": <Styled(Card)>
                <CardHeader
                  title={
                    <FormattedMessage
                      defaultMessage="Login to your account"
                      id="ocpui.components.Login.title"
                      values={Object {}}
                    />
                  }
                />
                <Formik
                  enableReinitialize={false}
                  isInitialValid={false}
                  onSubmit={[Function]}
                  render={[Function]}
                  validateOnBlur={true}
                  validateOnChange={true}
                  validationSchema={
                    ObjectSchema {
                      "_blacklist": Array [],
                      "_conditions": Array [],
                      "_defaultDefault": [Function],
                      "_deps": Array [],
                      "_excludedEdges": Array [],
                      "_exclusive": Object {},
                      "_mutate": false,
                      "_nodes": Array [
                        "password",
                        "username",
                      ],
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "object",
                      "_typeError": [Function],
                      "_whitelist": Array [],
                      "fields": Object {
                        "password": StringSchema {
                          "_blacklist": Array [],
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": Array [],
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "username": StringSchema {
                          "_blacklist": Array [],
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": Array [],
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                      },
                      "tests": Array [],
                      "transforms": Array [
                        [Function],
                      ],
                    }
                  }
                />
              </Styled(Card)>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <CardHeader
                    title={
                      <FormattedMessage
                        defaultMessage="Login to your account"
                        id="ocpui.components.Login.title"
                        values={Object {}}
                      />
                    }
                  />,
                  <Formik
                    enableReinitialize={false}
                    isInitialValid={false}
                    onSubmit={[Function]}
                    render={[Function]}
                    validateOnBlur={true}
                    validateOnChange={true}
                    validationSchema={
                      ObjectSchema {
                        "_blacklist": Array [],
                        "_conditions": Array [],
                        "_defaultDefault": [Function],
                        "_deps": Array [],
                        "_excludedEdges": Array [],
                        "_exclusive": Object {},
                        "_mutate": false,
                        "_nodes": Array [
                          "password",
                          "username",
                        ],
                        "_options": Object {
                          "abortEarly": true,
                          "recursive": true,
                        },
                        "_type": "object",
                        "_typeError": [Function],
                        "_whitelist": Array [],
                        "fields": Object {
                          "password": StringSchema {
                            "_blacklist": Array [],
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": Array [],
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                          "username": StringSchema {
                            "_blacklist": Array [],
                            "_conditions": Array [],
                            "_deps": Array [],
                            "_exclusive": Object {
                              "required": false,
                            },
                            "_mutate": false,
                            "_options": Object {
                              "abortEarly": true,
                              "recursive": true,
                            },
                            "_type": "string",
                            "_typeError": [Function],
                            "_whitelist": Array [],
                            "tests": Array [
                              [Function],
                              [Function],
                            ],
                            "transforms": Array [
                              [Function],
                            ],
                          },
                        },
                        "tests": Array [],
                        "transforms": Array [
                          [Function],
                        ],
                      }
                    }
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "title": <FormattedMessage
                      defaultMessage="Login to your account"
                      id="ocpui.components.Login.title"
                      values={Object {}}
                    />,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "enableReinitialize": false,
                    "isInitialValid": false,
                    "onSubmit": [Function],
                    "render": [Function],
                    "validateOnBlur": true,
                    "validateOnChange": true,
                    "validationSchema": ObjectSchema {
                      "_blacklist": Array [],
                      "_conditions": Array [],
                      "_defaultDefault": [Function],
                      "_deps": Array [],
                      "_excludedEdges": Array [],
                      "_exclusive": Object {},
                      "_mutate": false,
                      "_nodes": Array [
                        "password",
                        "username",
                      ],
                      "_options": Object {
                        "abortEarly": true,
                        "recursive": true,
                      },
                      "_type": "object",
                      "_typeError": [Function],
                      "_whitelist": Array [],
                      "fields": Object {
                        "password": StringSchema {
                          "_blacklist": Array [],
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": Array [],
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                        "username": StringSchema {
                          "_blacklist": Array [],
                          "_conditions": Array [],
                          "_deps": Array [],
                          "_exclusive": Object {
                            "required": false,
                          },
                          "_mutate": false,
                          "_options": Object {
                            "abortEarly": true,
                            "recursive": true,
                          },
                          "_type": "string",
                          "_typeError": [Function],
                          "_whitelist": Array [],
                          "tests": Array [
                            [Function],
                            [Function],
                          ],
                          "transforms": Array [
                            [Function],
                          ],
                        },
                      },
                      "tests": Array [],
                      "transforms": Array [
                        [Function],
                      ],
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "area": "footer",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
